package com.github.fromiva.wsf.model;

import lombok.AllArgsConstructor;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import java.io.Serial;
import java.util.Collection;
import java.util.Set;

/**
 * Model class with information about User.
 * Includes support for Spring Security authentication mechanism.
 */
@NoArgsConstructor
@AllArgsConstructor
@Getter
@Setter
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
@ToString
public final class User implements UserDetails {

    @Serial
    private static final long serialVersionUID = 1L;

    /** Unique User ID, generated by the persistent layer. */
    private Long id;

    /** User email. Unique and used as a username. */
    @EqualsAndHashCode.Include
    private String email;

    /** User password. */
    private String password;

    /** User first name. */
    private String firstName;

    /** User middle name or patronymic. */
    private String middleName;

    /** User last name. */
    private String lastName;

    /** Set of user granted security authorities. */
    private Collection<? extends GrantedAuthority> authorities = Set.of();

    /** Whether user profile not expired. */
    private boolean accountNonExpired;

    /** Whether user profile not locked. */
    private boolean accountNonLocked;

    /** Whether user profile credentials not expired. */
    private boolean credentialsNonExpired;

    /** Whether user profile enabled. */
    private boolean enabled;

    @Override
    public String getUsername() {
        return email;
    }
}
