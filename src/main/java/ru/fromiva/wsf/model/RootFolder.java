package ru.fromiva.wsf.model;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@NoArgsConstructor
@AllArgsConstructor
@Getter
@Setter
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
@ToString
@Entity(name = "RootFolder")
@Table(name = "ROOT_FOLDERS")
@SuppressWarnings("checkstyle:MagicNumber")
public class RootFolder {

    /** Unique User ID, generated by the persistent storage. */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID",
            updatable = false,
            insertable = false)
    private Long id;


    /** Root folder alias. Unique. Represents as a folder name for users. */
    @Column(name = "NAME",
            nullable = false,
            unique = true,
            length = 64)
    private String name;

    /** Root folder path. Unique. */
    @EqualsAndHashCode.Include
    @Column(name = "PATH",
            nullable = false,
            unique = true,
            length = 4096)
    private String path;

    /** Root folder size limit to uploads. In bytes, 0 means no limits. */
    @Column(name = "LIMIT",
            nullable = false,
            unique = false)
    private Long limit;

    /** Root folder description. Unique. */
    @Column(name = "DESCRIPTION",
            nullable = true,
            unique = false,
            length = 4096)
    private String description;

    /** User ID by whom the root folder was created. */
    @Column(name = "USER_ID",
            nullable = false,
            unique = false)
    private Long userId;
}
